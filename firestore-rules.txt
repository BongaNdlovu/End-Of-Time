rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // This rule is required for collectionGroup queries on 'interactions'
    // It allows any client to read interaction documents (e.g., to count prayers).
    match /{path=**}/interactions/{interactionId} {
      allow read: if true;
      // Keep the more specific create/update/delete rules below for security.
    }

    // Leaderboard collection rules
    match /leaderboard/{userId} {
      // Anyone can read leaderboard entries (for displaying the leaderboard)
      allow read: if true;
      
      // Users can only write to their own document (for submitting their own scores)
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Test collection for validation (optional)
    match /test/{document} {
      allow read, write: if request.auth != null;
    }

    // Prayers collection rules
    match /prayers/{prayerId} {
      // Publicly readable feed (client filters anonymity/ownership)
      allow read: if true;
      // Only authenticated users can create prayer requests
      allow create: if request.auth != null;
      // Only the owner can update/delete their own prayer
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Interactions on a prayer (e.g., "I prayed", comments)
    match /prayers/{prayerId}/interactions/{interactionId} {
      allow read: if true;
      // Allow anyone to record an interaction (supports guests for "I prayed")
      allow create: if true;
      // Only the author of an interaction can modify/delete it
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Notifications for users
    match /notifications/{notificationId} {
      allow read, update: if request.auth != null && request.auth.uid == resource.data.userId;
      // SECURITY FIX: Only allow creating a notification if the target userId in the document
      // matches the ID of the user making the request.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // User profiles (store FCM tokens and preferences)
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
} 